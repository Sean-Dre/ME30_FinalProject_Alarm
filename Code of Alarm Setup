import time
from adafruit_circuitplayground import cp

cp.detect_taps = 2

hour = 0
minute = 0
x = 0
temp_hour = 0
temp_minute = 0

alarm_sec = 0
curr_time = 0

current = 0.0
sec_day = 24*60*60
sec_hour= 60*60
sec_min = 60
cur_hour = 0
cur_min = 0
cur_sec = 0
snooze_hour = 0
snooze_min = 0

def lightson(num):
    cp.pixels.brightness = 0.01
    if num <= 10:
        cp.pixels[num-1] = (255, 0, 0)
        print(num)
    elif num >= 11 and num <= 20:
        cp.pixels[num-11] = (0, 0, 255)
        print(num)
    elif num >= 21 and num <= 30:
        cp.pixels[num-21] = (0, 255, 0)
        print(num)
    elif num >= 31 and num <= 40:
        cp.pixels[num-31] = (255, 0, 255)
        print(num)
    elif num >= 41 and num <= 50:
        cp.pixels[num-41] = (0, 255, 255)
        print(num)
    elif num >= 51 and num <= 59:
        cp.pixels[num-51] = (255, 255, 255)
        print(num)

def lightsoff(num):
    cp.pixels.brightness = 0.01
    if num < 10:
        cp.pixels[num] = (0, 0, 0)
        print(num)
    elif num >= 10 and num <= 19:
        cp.pixels[num - 10] = (255, 0, 0)
        print(num)
    elif num >= 20 and num <= 29:
        cp.pixels[num - 20] = (0, 0, 255)
        print(num)
    elif num >= 30 and num <= 39:
        cp.pixels[num - 30] = (0, 255, 0)
        print(num)
    elif num >= 40 and num <= 49:
        cp.pixels[num - 40] = (255, 0, 255)
        print(num)
    elif num >= 50 and num <= 59:
        cp.pixels[num - 50] = (0, 255, 255)
        print(num)
        
def PST(epoch): #Gets time in PST
    current = int(epoch) + 705267968 - 25215
    cur_sec = (current % sec_day) % sec_hour % sec_min
    cur_min = (current % sec_day) % sec_hour // sec_min
    cur_hour = (current % sec_day) // sec_hour

    return cur_hour, cur_min, cur_sec

        
while True:
    while cp.switch == True:
        while x == 0:
            if cp.tapped:
                hour = temp_hour
                print("Hour is now: " + str(hour))
                cp.pixels.fill((0,0,0))
                temp_hour = 0
                x = 1
                time.sleep(0.5)
            elif cp.button_a and not cp.button_b:
                print('a ', end = ' ')
                temp_hour+=1
                lightson(temp_hour)
                time.sleep(0.3)
            elif cp.button_b and not cp.button_a:
                print('b', end = ' ')
                temp_hour-=1
                lightsoff(temp_hour)
                time.sleep(0.3)
            elif temp_hour > 24 or temp_hour < 0:
                temp_hour = 0
                cp.pixels.fill((0,0,0))
        while x == 1:
            if cp.tapped:
                minute = temp_minute
                print("Minute is now: " + str(minute))
                cp.pixels.fill((0,0,0))
                temp_minute = 0
                x = 0
                time.sleep(3)
            if cp.button_a and not cp.button_b:
                print('a ', end = ' ')
                temp_minute+=1
                lightson(temp_minute)
                time.sleep(0.3)
            elif cp.button_b and not cp.button_a:
                print('b', end = ' ')
                temp_minute-=1
                lightsoff(temp_minute)
                time.sleep(0.3)
            elif temp_minute > 60 or temp_minute < 0:
                temp_minute = 0
                cp.pixels.fill((0,0,0))
            
           
    while cp.switch == False: 
        epoch = time.time() #NEEDS TO BE INCLUDED IN THIS LOOP
        
        snooze_hour = hour
        snooze_min = minute
        
        if temp_hour > 0 or temp_minute > 0:
            temp_hour = 0
            temp_minute = 0
            cp.pixels.fill((0,0,0))
    
        def snooze(snooze_hour, snooze_min): #this is the snooze function. sets snooze to 5 min.
            if snooze_min+5 > 59:
                snooze_hour += 1
                snooze_min = (min+5)-60
            elif snooze_min+5 < 59:
                snooze_min+=5
            
            return snooze_hour, snooze_min
            
        print(PST(epoch))
        time.sleep(2)
        
        if snooze_hour == cur_hour and snooze_min == cur_min:  #this is the alarm function
            cp.play_tone(1000, 0.5)
            time.sleep(0.5)
            cp.play_tone(1000, 0.5)
            time.sleep(0.5)
            if cp.button_b and not cp.button_a:
                snooze(snooze_hour, snooze_min)
            if cp.button_a and not cp.button_b: #this is where puzzle function happens
                pass
